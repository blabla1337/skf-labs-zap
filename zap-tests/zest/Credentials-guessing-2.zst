{
  "about": "This is a Zest script. For more details about Zest visit https://github.com/zaproxy/zest/",
  "zestVersion": "0.3",
  "title": "Credentials-guessing-2",
  "description": "A template standalone script",
  "prefix": "",
  "type": "StandAlone",
  "parameters": {
    "tokenStart": "{{",
    "tokenEnd": "}}",
    "tokens": {},
    "elementType": "ZestVariables"
  },
  "statements": [
    {
      "url": "http://localhost:4444/login",
      "data": "username\u003dadmin\u0026password\u003dadmin",
      "method": "POST",
      "headers": "Content-Type: application/x-www-form-urlencoded\r\nContent-Length: 29\r\nOrigin: http://localhost:4444\r\nDNT: 1\r\nUpgrade-Insecure-Requests: 1\r\n",
      "response": {
        "url": "http://localhost:4444/login",
        "headers": "",
        "body": "",
        "statusCode": 200,
        "responseTimeInMs": 3,
        "elementType": "ZestResponse"
      },
      "assertions": [
        {
          "rootExpression": {
            "code": 200,
            "not": false,
            "elementType": "ZestExpressionStatusCode"
          },
          "elementType": "ZestAssertion"
        }
      ],
      "followRedirects": false,
      "timestamp": 1653839234845,
      "cookies": [],
      "index": 1,
      "enabled": true,
      "elementType": "ZestRequest"
    },
    {
      "string": "{{response.body}}",
      "variableName": "recorded-body",
      "index": 2,
      "enabled": true,
      "elementType": "ZestAssignString"
    },
    {
      "rootExpression": {
        "regex": "\\QThe username introduced is not correct\\E",
        "variableName": "response.body",
        "caseExact": false,
        "not": false,
        "elementType": "ZestExpressionRegex"
      },
      "ifStatements": [
        {
          "message": "To verbose error message detected",
          "priority": "HIGH",
          "index": 3,
          "enabled": true,
          "elementType": "ZestActionFail"
        }
      ],
      "elseStatements": [],
      "index": 2,
      "enabled": true,
      "elementType": "ZestConditional"
    },
    {
      "url": "http://localhost:4444/login",
      "data": "username\u003d01234\u0026password\u003d",
      "method": "POST",
      "headers": "Content-Type: application/x-www-form-urlencoded\r\nContent-Length: 29\r\nOrigin: http://localhost:4444\r\nDNT: 1\r\nUpgrade-Insecure-Requests: 1\r\n",
      "response": {
        "url": "http://localhost:4444/login",
        "headers": "",
        "body": "",
        "statusCode": 200,
        "responseTimeInMs": 3,
        "elementType": "ZestResponse"
      },
      "assertions": [
        {
          "rootExpression": {
            "code": 200,
            "not": false,
            "elementType": "ZestExpressionStatusCode"
          },
          "elementType": "ZestAssertion"
        }
      ],
      "followRedirects": false,
      "timestamp": 1653839234845,
      "cookies": [],
      "index": 3,
      "enabled": true,
      "elementType": "ZestRequest"
    },
    {
      "message": "{{recorded-body}}",
      "index": 4,
      "enabled": true,
      "elementType": "ZestActionPrint"
    },
    {
      "rootExpression": {
        "value": "{{recorded-body}}",
        "variableName": "response.body",
        "caseExact": false,
        "not": true,
        "elementType": "ZestExpressionEquals"
      },
      "ifStatements": [
        {
          "message": "Response body\u0027s dont match - possible username enumeration",
          "priority": "INFO",
          "index": 6,
          "enabled": true,
          "elementType": "ZestActionFail"
        }
      ],
      "elseStatements": [],
      "index": 5,
      "enabled": true,
      "elementType": "ZestConditional"
    }
  ],
  "authentication": [],
  "index": 0,
  "enabled": true,
  "elementType": "ZestScript"
}
